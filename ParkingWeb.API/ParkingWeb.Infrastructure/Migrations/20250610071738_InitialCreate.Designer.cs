// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingWeb.Infrastructure.Persistence;

#nullable disable

namespace ParkingWeb.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610071738_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParkingWeb.Domain.Entities.ParkingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DiscountApplied")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("ParkingEntries");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.SupermarketInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkingEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkingEntryId");

                    b.ToTable("SupermarketInvoices");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.ParkingEntry", b =>
                {
                    b.HasOne("ParkingWeb.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("ParkingEntries")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.SupermarketInvoice", b =>
                {
                    b.HasOne("ParkingWeb.Domain.Entities.ParkingEntry", "ParkingEntry")
                        .WithMany("SupermarketInvoices")
                        .HasForeignKey("ParkingEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingEntry");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.ParkingEntry", b =>
                {
                    b.Navigation("SupermarketInvoices");
                });

            modelBuilder.Entity("ParkingWeb.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("ParkingEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
